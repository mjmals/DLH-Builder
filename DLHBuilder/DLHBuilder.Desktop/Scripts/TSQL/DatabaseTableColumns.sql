SELECT 
    col.TABLE_SCHEMA,
	col.TABLE_NAME, 
    col.ORDINAL_POSITION,
	col.COLUMN_NAME, 
	DATA_TYPE 
	+ 
	CASE 
		WHEN CHARACTER_MAXIMUM_LENGTH IS NOT NULL 
			THEN '(' + CASE CHARACTER_MAXIMUM_LENGTH WHEN -1 THEN 'MAX' ELSE CONVERT(VARCHAR(10), CHARACTER_MAXIMUM_LENGTH) END + ')'
		ELSE ''
	END
	+
	CASE 
		WHEN NUMERIC_PRECISION IS NOT NULL AND DATA_TYPE IN ('decimal', 'numeric')
			THEN '(' + ISNULL(CONVERT(VARCHAR(10), NUMERIC_PRECISION), '') + ISNULL(',' + CONVERT(VARCHAR(10), NUMERIC_SCALE), '') + ')'
		ELSE ''
	END AS DATA_TYPE,
	IS_NULLABLE,
	COLLATION_NAME,
	CASE WHEN pkcol.COLUMN_NAME IS NOT NULL THEN 'PK' ELSE NULL END AS KEY_USAGE
FROM 
	INFORMATION_SCHEMA.COLUMNS AS col
	LEFT JOIN
			(
				SELECT
					tblkey.CONSTRAINT_NAME,
					tblkey.TABLE_SCHEMA,
					tblkey.TABLE_NAME,
					keycol.COLUMN_NAME
				FROM
					INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tblkey
					INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS keycol ON
						tblkey.CONSTRAINT_NAME = keycol.CONSTRAINT_NAME
						AND tblkey.TABLE_NAME = keycol.TABLE_NAME
						AND tblkey.CONSTRAINT_TYPE = 'PRIMARY KEY'
			) AS pkcol ON
		col.TABLE_NAME = pkcol.TABLE_NAME
		AND col.TABLE_SCHEMA = pkcol.TABLE_SCHEMA
		AND col.COLUMN_NAME = pkcol.COLUMN_NAME
ORDER BY 
	TABLE_SCHEMA,
	TABLE_NAME, 
	ORDINAL_POSITION